%!PS-Adobe-3.0
%%BoundingBox: 24 24 571 818
%%Title: Enscript Output
%%For: Dakota Bowman
%%Creator: GNU Enscript 1.6.6
%%CreationDate: Sun Jun 20 02:34:11 2021
%%Orientation: Portrait
%%Pages: (atend)
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 6
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 6
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 10 10 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [595 842] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-enscript 1.6 6
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman

% Fonts.
/Times-Bold /HeaderFont-Bold MF
/HeaderDateF /HeaderFont-Bold findfont 12 scalefont def

/Times-Roman /HeaderFont-Times MF
/HeaderHDRF /HeaderFont-Times findfont 14 scalefont def

/HeaderPageNumF /Helvetica-Bold findfont 28.8 scalefont def

/do_header {	% print enscript header
  gsave
    d_header_x d_header_y translate

    % light bar
    0 0 d_header_w d_header_h 2 div Box
    .95 setgray fill

    % dark gray boxes
    /dbw d_header_h 2 mul def	% dark box width
    /dbc .7 def			% dark box color

    % left dark box.
    0 0 dbw d_header_h Box
    dbc setgray fill

    0 setgray 
    HeaderDateF setfont
    moddatestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 2 div 2 add moveto show
    modtimestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 5 div moveto show

    % right dark box
    d_header_w dbw sub 0 dbw d_header_h Box
    dbc setgray fill

    HeaderPageNumF setfont
    1 setgray
    pagenumstr dup
    stringwidth pop dbw exch sub 2 div d_header_w dbw sub add
    d_header_h .2 mul moveto show

    % filename
    0 setgray 
    HeaderHDRF setfont
    d_header_w fname stringwidth pop sub 2 div d_header_h 8 div moveto
    fname show

    % user supplied header string.
    user_header_p {
      /h d_header_h 8 div 5 mul def

      % Implement strict enscript compatibility.
      user_header_center_str () eq user_header_right_str () eq and {
        d_header_w user_header_left_str stringwidth pop sub 2 div 
        h moveto user_header_left_str show
      } {
        dbw 5 add h moveto user_header_left_str show

        d_header_w user_header_center_str stringwidth pop sub 2 div 
        h moveto user_header_center_str show

	d_header_w dbw sub 5 sub user_header_right_str stringwidth pop
	sub h moveto user_header_right_str show
      } ifelse
    } if

  grestore
} def
%%EndResource
/d_page_w 547 def
/d_page_h 794 def
/d_header_x 0 def
/d_header_y 758 def
/d_header_w 547 def
/d_header_h 36 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 547 def
/d_footer_h 0 def
/d_output_w 547 def
/d_output_h 758 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
24 24 translate
/pagenum 1 def
/fname (/Users/dakotabowman/Developer/python-with-mosh/mosh-1.py) def
/fdir (/Users/dakotabowman/Developer/python-with-mosh) def
/ftail (mosh-1.py) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (06/20/21) def
/modtimestr (02:33:48) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
30 745 M (1:) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 745 M
(# Filename = 'mosh-1.py') s
/F-gs-font 10 10 SF
30 734 M (2:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 734 M
(# Python Programming w/ Mosh) s
/F-gs-font 10 10 SF
30 723 M (3:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 723 M
(# --------------------------) s
/F-gs-font 10 10 SF
30 712 M (4:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 712 M
(# Variables) s
/F-gs-font 10 10 SF
30 701 M (5:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
30 690 M (6:) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 690 M
(# variable names should be clear and descriptive!) s
/F-gs-font 10 10 SF
30 679 M (7:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 679 M
(# all letters in variables should remain lower case) s
/F-gs-font 10 10 SF
30 668 M (8:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 668 M
(# in variables with multiple names, use underscore) s
/F-gs-font 10 10 SF
30 657 M (9:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 657 M
(# always put space between the "=") s
/F-gs-font 10 10 SF
24 646 M (10:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
24 635 M (11:) s
48 635 M
(students_count = 1000  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
186 635 M
(# integer) s
/F-gs-font 10 10 SF
24 624 M (12:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 624 M
(rating = 4.88  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
138 624 M
(# floating point num.) s
/F-gs-font 10 10 SF
24 613 M (13:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 613 M
(is_published = False  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
180 613 M
(# boolean \(True/False\)) s
/F-gs-font 10 10 SF
24 602 M (14:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 602 M
(course_name = ) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
132 602 M
("Python Programming") s
/F-gs-font 10 10 SF
0 setgray
252 602 M
(  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
264 602 M
(# string \(a 'string' of chars.\)) s
/F-gs-font 10 10 SF
24 591 M (15:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 591 M
(print) s
/F-gs-font 10 10 SF
0 setgray
78 591 M
(\(students_count\)  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
186 591 M
(# <-- the print = 1000) s
/F-gs-font 10 10 SF
24 580 M (16:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 580 M
(# --------------------------) s
/F-gs-font 10 10 SF
24 569 M (17:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 569 M
(# Strings) s
/F-gs-font 10 10 SF
24 558 M (18:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
24 547 M (19:) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 547 M
(# use double quotes to enclose strings, like:) s
/F-gs-font 10 10 SF
24 536 M (20:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 536 M
(course = ) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
102 536 M
("Python Programming") s
/F-gs-font 10 10 SF
0 setgray
24 525 M (21:) s
24 514 M (22:) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 514 M
(# single quotes can be used, but double quotes preferred) s
/F-gs-font 10 10 SF
24 503 M (23:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
24 492 M (24:) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 492 M
(# use triple quotes for strings spanning multiple lines, like:) s
/F-gs-font 10 10 SF
24 481 M (25:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 481 M
(course_description = ) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
174 481 M
(""") s
/F-gs-font 10 10 SF
24 470 M (26:) s
/Courier-Bold 10 10 SUF
48 470 M
(Hello, and welcome to the course!) s
/F-gs-font 10 10 SF
24 459 M (27:) s
/Courier-Bold 10 10 SUF
48 459 M
(I'm your instructor, Mosh.) s
/F-gs-font 10 10 SF
24 448 M (28:) s
/Courier-Bold 10 10 SUF
48 448 M
(This course will teach you all you) s
/F-gs-font 10 10 SF
24 437 M (29:) s
/Courier-Bold 10 10 SUF
48 437 M
(need to know about Python. Hopefully) s
/F-gs-font 10 10 SF
24 426 M (30:) s
/Courier-Bold 10 10 SUF
48 426 M
(by the end, you'll be 100% satisfied!) s
/F-gs-font 10 10 SF
24 415 M (31:) s
/Courier-Bold 10 10 SUF
48 415 M
(""") s
/F-gs-font 10 10 SF
0 setgray
24 404 M (32:) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 404 M
(# --------------------------) s
/F-gs-font 10 10 SF
24 393 M (33:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 393 M
(# Functions \(a reusable piece of code to perform a specific task\)) s
/F-gs-font 10 10 SF
24 382 M (34:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
24 371 M (35:) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 371 M
(# Python has built-in, reusable, functions) s
/F-gs-font 10 10 SF
24 360 M (36:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 360 M
(# Ex:) s
/F-gs-font 10 10 SF
24 349 M (37:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 349 M
(course = ) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
102 349 M
("Python Programming") s
/F-gs-font 10 10 SF
0 setgray
24 338 M (38:) s
48 338 M
(len\(course\)  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
126 338 M
(# **) s
/F-gs-font 10 10 SF
24 327 M (39:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 327 M
(# ** the 'len' func. outputs the num. of chars. in 'course') s
/F-gs-font 10 10 SF
24 316 M (40:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 316 M
(# our var., 'course', is given to the func. as an *argument*) s
/F-gs-font 10 10 SF
24 305 M (41:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 305 M
(# some fuctions require arguments \(inputs of the function\)) s
/F-gs-font 10 10 SF
24 294 M (42:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
24 283 M (43:) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 283 M
(# if you want to index a certain character, or range of) s
/F-gs-font 10 10 SF
24 272 M (44:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 272 M
(# characters within a string, use '[]', like:) s
/F-gs-font 10 10 SF
24 261 M (45:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 261 M
(print) s
/F-gs-font 10 10 SF
0 setgray
78 261 M
(\(course[3]\)) s
24 250 M (46:) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 250 M
(print) s
/F-gs-font 10 10 SF
0 setgray
78 250 M
(\(course[-1]\)) s
24 239 M (47:) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 239 M
(print) s
/F-gs-font 10 10 SF
0 setgray
78 239 M
(\(course[0:4]\)) s
24 228 M (48:) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 228 M
(print) s
/F-gs-font 10 10 SF
0 setgray
78 228 M
(\(course[:4]\)) s
24 217 M (49:) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 217 M
(print) s
/F-gs-font 10 10 SF
0 setgray
78 217 M
(\(course[0:]\)) s
24 206 M (50:) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 206 M
(print) s
/F-gs-font 10 10 SF
0 setgray
78 206 M
(\(course[:]\)) s
24 195 M (51:) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 195 M
(# --------------------------) s
/F-gs-font 10 10 SF
24 184 M (52:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 184 M
(# Escape Sequences) s
/F-gs-font 10 10 SF
24 173 M (53:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
24 162 M (54:) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 162 M
(# \\", \\', \\\\, \\n \(new line\),) s
/F-gs-font 10 10 SF
24 151 M (55:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 151 M
(# the backslash is the escape *character*, and when used before a) s
/F-gs-font 10 10 SF
24 140 M (56:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 140 M
(# character \(chars. listed above\) that usually performs a simple) s
/F-gs-font 10 10 SF
24 129 M (57:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 129 M
(# function, it enables the use of the actual char. instead.) s
/F-gs-font 10 10 SF
24 118 M (58:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 118 M
(#   - the exception is '\\n' <-- this means "new line") s
/F-gs-font 10 10 SF
24 107 M (59:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 107 M
(course = ) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
102 107 M
("Python \\"Programming") s
/F-gs-font 10 10 SF
0 setgray
24 96 M (60:) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 96 M
(print) s
/F-gs-font 10 10 SF
0 setgray
78 96 M
(\(course\)  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
138 96 M
(# <-- the print = Python "Programming) s
/F-gs-font 10 10 SF
24 85 M (61:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 85 M
(# --------------------------) s
/F-gs-font 10 10 SF
24 74 M (62:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 74 M
(# Formatted Strings) s
/F-gs-font 10 10 SF
24 63 M (63:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
24 52 M (64:) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 52 M
(# Ex.1:) s
/F-gs-font 10 10 SF
24 41 M (65:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 41 M
(first = ) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
96 41 M
("Dakota") s
/F-gs-font 10 10 SF
0 setgray
24 30 M (66:) s
48 30 M
(last = ) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
90 30 M
("Bowman") s
/F-gs-font 10 10 SF
0 setgray
24 19 M (67:) s
48 19 M
(full = first + ) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
138 19 M
(" ") s
/F-gs-font 10 10 SF
0 setgray
156 19 M
( + last  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
210 19 M
(# <-- this is called 'concatenation') s
/F-gs-font 10 10 SF
24 8 M (68:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 8 M
(print) s
/F-gs-font 10 10 SF
0 setgray
78 8 M
(\(full\)  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
126 8 M
(# <-- the print = Dakota Bowman) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
24 24 translate
/pagenum 2 def
/fname (/Users/dakotabowman/Developer/python-with-mosh/mosh-1.py) def
/fdir (/Users/dakotabowman/Developer/python-with-mosh) def
/ftail (mosh-1.py) def
/Courier-Oblique 10 10 SUF
% User defined strings:
/pagenumstr (2) def
/moddatestr (06/20/21) def
/modtimestr (02:33:48) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
0.698039 0.133333 0.133333 setrgbcolor
/F-gs-font 10 10 SF
24 745 M (69:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
24 734 M (70:) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 734 M
(# Ex.2:) s
/F-gs-font 10 10 SF
24 723 M (71:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 723 M
(first = ) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
96 723 M
("Dakota") s
/F-gs-font 10 10 SF
0 setgray
24 712 M (72:) s
48 712 M
(last = ) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
90 712 M
("Bowman") s
/F-gs-font 10 10 SF
0 setgray
24 701 M (73:) s
48 701 M
(full = f) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
96 701 M
("{first} {last}") s
/F-gs-font 10 10 SF
0 setgray
24 690 M (74:) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 690 M
(print) s
/F-gs-font 10 10 SF
0 setgray
78 690 M
(\(full\)  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
126 690 M
(# <-- again, the print = Dakota Bowman) s
/F-gs-font 10 10 SF
24 679 M (75:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 679 M
(# This example keeps simple OR complex code much cleaner-looking.) s
/F-gs-font 10 10 SF
24 668 M (76:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 668 M
(#   *at runtime, python just replaces everything in curly braces,) s
/F-gs-font 10 10 SF
24 657 M (77:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 657 M
(#   & the space remains a space. so, we could put and expression) s
/F-gs-font 10 10 SF
24 646 M (78:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 646 M
(#   within those curly braces and receive it's value) s
/F-gs-font 10 10 SF
24 635 M (79:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 635 M
(# --------------------------) s
/F-gs-font 10 10 SF
24 624 M (80:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
_R
S
%%Trailer
%%Pages: 2
%%DocumentNeededResources: font Times-Roman Courier-Oblique Courier-Bold 
%%+ font Courier Times-Bold 
%%EOF
